//引入一个包const path = require('path');const HTMLWebpackPlugin = require('html-webpack-plugin');const { CleanWebpackPlugin } = require('clean-webpack-plugin');module.exports = {    //指定入口文件    entry: "./src/index.ts",    //指定打包文件所在目录    output: {        path: path.resolve(__dirname,'dist'),        filename: "bundle.js"    },    mode: 'development', // 设置mode    //指定webpack打包时要使用的模块    // environment:{    //     arrowFunction:false,    //     const:false,    // },    module: {        rules: [            {                //规则生效的文件                test: /\.ts$/,                use:[                    {                      //指定加载器                        loader: "babel-loader",                        options: {                            //设置预定义的环境                            presets:[                                [                                    "@babel/preset-env",                                    {                                        targets:{                                            "chrome":"88",                                            "ie":"11",                                        },                                        "corejs":"3",                                        "useBuiltIns":"usage",                                    }                                ],                            ]                        }                    },                    'ts-loader',                ],                exclude: /node_modules/            },            //设置less文件的处理            {                test: /\.less$/,                use:[                    "style-loader",                    "css-loader",                    {                        loader: "postcss-loader",                        options: {                            postcssOptions:{                                plugins: [                                    [                                        "postcss-preset-env",                                        {                                            browsers:'last 2 versions'                                        }                                    ]                                ]                            }                        },                    },                    "less-loader"                ]            }        ]    },    plugins: [        new CleanWebpackPlugin(),        new HTMLWebpackPlugin({            template: "./src/index.html"        }),    ],    resolve: {        extensions: ['.ts','.js'],    },}